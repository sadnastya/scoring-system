volumes:
  nss_data:


services:
  nss_db:
    image: postgres:14.0-alpine
    restart: always
    env_file: ./backend/.env
    ports:
      - "5432:5432"
    environment:
      POSTGRES_USER: nss_user
      POSTGRES_PASSWORD: nss_password
      POSTGRES_DB: nss_db
    volumes:
      - nss_data:/var/lib/postgresql/data
    healthcheck:
      # test: [ "CMD-SHELL", "pg_isready -U $POSTGRES_USER -d $POSTGRES_DB" ]
      test: [ "CMD-SHELL", "pg_isready -U $${POSTGRES_USER} -d $${POSTGRES_DB}" ]
      interval: 5s
      timeout: 5s
      retries: 3
    networks:
      - nss_network

  backend:
    build: ./backend/
    env_file: ./backend/.env
    ports:
      - "5000:5000"
    depends_on:
      nss_db:
        condition: service_healthy
      smtp-server:
        condition: service_healthy
    networks:
      - nss_network

  react-app:
    build: ./front_nss
    ports:
      - "8080:3000"
    environment:
      - NODE_ENV=production
    depends_on:
      - backend
    networks:
      - nss_network

  smtp-server:
    image: maildev/maildev
    container_name: smtp-server
    ports:
      - "1025:1025"
      - "1080:1080"
    restart: always
    networks:
      - nss_network

networks:
  nss_network:
    driver: bridge
